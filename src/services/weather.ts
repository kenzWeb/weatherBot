import {translate} from '@vitalets/google-translate-api'

import {Context} from 'grammy'
import {convertToFahrenheit} from '../utils/celsius-to-fahrenheit'
import {getWeather} from '../utils/weatherScrapper'

type WeatherData = {
	ctx: Context
	city: string
	isFahrenheit: boolean
}

export const weather = async ({ctx, city, isFahrenheit}: WeatherData) => {
	if (!city) {
		await ctx.reply(
			'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /select.',
		)
		return
	}

	try {
		const translatedCity = await translate(city, {from: 'ru', to: 'en'})
		const cityInEnglish = translatedCity.text.toLowerCase()
		const weatherData = await getWeather(cityInEnglish)

		if (weatherData.temperature && weatherData.condition) {
			const temperatureCelsius = parseFloat(
				weatherData.temperature.trim().replace('¬∞', ''),
			)

			const temperature = isFahrenheit
				? `${convertToFahrenheit(temperatureCelsius).toFixed(1)}¬∞F`
				: `${temperatureCelsius}¬∞C`

			const weatherMessage =
				`üåÜ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ *${city}*:\n\n` +
				`üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: *${temperature}*\n` +
				`üå• –°–æ—Å—Ç–æ—è–Ω–∏–µ: *${weatherData.condition.trim()}*\n` +
				`üìÖ –î–∞—Ç–∞: ${new Date().toLocaleDateString()}\n\n` +
				`üåê –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: https://pogoda.mail.ru/prognoz/${cityInEnglish}`

			await ctx.reply(weatherMessage)
			return weatherMessage
		} else {
			await ctx.reply(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ ${city}.`)
		}
	} catch (error) {
		console.error('Error during translation or weather fetching:', error)
		await ctx.reply(
			'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.',
		)
	}
}
