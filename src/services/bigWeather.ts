import {translate} from '@vitalets/google-translate-api'
import {Context} from 'grammy'
import { GetBigWeather } from '../utils/bigWeatherScrapper'

type WeatherData = {
	ctx: Context
	city: string
	isFahrenheit: boolean
}

const degreeSymbols = {
	fahrenheit: 'F',
	celsius: 'C',
}

const getWeatherEmoji = (temperature: number): string => {
	if (temperature >= 30) return 'üî•'
	if (temperature >= 20) return '‚òÄÔ∏è'
	if (temperature >= 10) return '‚õÖ'
	return '‚ùÑÔ∏è'
}

const formatWeatherMessage = (
	city: string,
	days: string[],
	temperatures: string[],
	conditions: string[],
	degreeSymbol: string,
): string => {
	let message = `üåÜ –ü–æ–≥–æ–¥–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}\n\nüìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n`
	days.forEach((day, index) => {
		const temp = temperatures[index]
		const condition = conditions[index]
		const temperatureValue = parseInt(temp)
		message += `üìå ${day.trim()}: ${getWeatherEmoji(
			temperatureValue,
		)} ${temp}${degreeSymbol} - ${condition.trim()}\n`
	})
	return message + `\n‚ú® –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –¥–Ω—è!`
}

export const BigWeather = async ({ctx, city, isFahrenheit}: WeatherData) => {
	if (!city) {
		await ctx.reply(
			'‚ùóÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /select.',
		)
		return null
	}

	try {
		const {text: cityInEnglish} = await translate(city, {from: 'ru', to: 'en'})
		const weatherData = await GetBigWeather(cityInEnglish.toLowerCase())

		const {day, temperature, condition} = weatherData
		if (day && temperature && condition) {
			const degreeSymbol = isFahrenheit
				? degreeSymbols.fahrenheit
				: degreeSymbols.celsius
			const weatherMessage = formatWeatherMessage(
				city,
				day,
				temperature,
				condition,
				degreeSymbol,
			)
			await ctx.reply(weatherMessage, {parse_mode: 'Markdown'})
			return weatherMessage
		} else {
			throw new Error('Incomplete weather data')
		}
	} catch (error) {
		console.error('Error during translation or weather fetching:', error)
		await ctx.reply(
			`‚ùóÔ∏è–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ *${city}*. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`,
			{parse_mode: 'Markdown'},
		)
		return null
	}
}
